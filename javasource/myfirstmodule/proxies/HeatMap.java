// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class HeatMap
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject heatMapMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.HeatMap";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		X("X"),
		Y("Y"),
		Z("Z"),
		HeatMap_Series("MyFirstModule.HeatMap_Series"),
		HeatMap_Yaxis("MyFirstModule.HeatMap_Yaxis"),
		HeatMap_Xaxis("MyFirstModule.HeatMap_Xaxis");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public HeatMap(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MyFirstModule.HeatMap"));
	}

	protected HeatMap(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject heatMapMendixObject)
	{
		if (heatMapMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MyFirstModule.HeatMap", heatMapMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MyFirstModule.HeatMap");

		this.heatMapMendixObject = heatMapMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'HeatMap.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.HeatMap initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.HeatMap.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.HeatMap initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.HeatMap(context, mendixObject);
	}

	public static myfirstmodule.proxies.HeatMap load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.HeatMap.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.HeatMap> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<myfirstmodule.proxies.HeatMap> result = new java.util.ArrayList<myfirstmodule.proxies.HeatMap>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MyFirstModule.HeatMap" + xpathConstraint))
			result.add(myfirstmodule.proxies.HeatMap.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of X
	 */
	public final java.lang.String getX()
	{
		return getX(getContext());
	}

	/**
	 * @param context
	 * @return value of X
	 */
	public final java.lang.String getX(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.X.toString());
	}

	/**
	 * Set value of X
	 * @param x
	 */
	public final void setX(java.lang.String x)
	{
		setX(getContext(), x);
	}

	/**
	 * Set value of X
	 * @param context
	 * @param x
	 */
	public final void setX(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String x)
	{
		getMendixObject().setValue(context, MemberNames.X.toString(), x);
	}

	/**
	 * @return value of Y
	 */
	public final java.lang.String getY()
	{
		return getY(getContext());
	}

	/**
	 * @param context
	 * @return value of Y
	 */
	public final java.lang.String getY(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Y.toString());
	}

	/**
	 * Set value of Y
	 * @param y
	 */
	public final void setY(java.lang.String y)
	{
		setY(getContext(), y);
	}

	/**
	 * Set value of Y
	 * @param context
	 * @param y
	 */
	public final void setY(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String y)
	{
		getMendixObject().setValue(context, MemberNames.Y.toString(), y);
	}

	/**
	 * @return value of Z
	 */
	public final java.lang.Integer getZ()
	{
		return getZ(getContext());
	}

	/**
	 * @param context
	 * @return value of Z
	 */
	public final java.lang.Integer getZ(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Z.toString());
	}

	/**
	 * Set value of Z
	 * @param z
	 */
	public final void setZ(java.lang.Integer z)
	{
		setZ(getContext(), z);
	}

	/**
	 * Set value of Z
	 * @param context
	 * @param z
	 */
	public final void setZ(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer z)
	{
		getMendixObject().setValue(context, MemberNames.Z.toString(), z);
	}

	/**
	 * @return value of HeatMap_Series
	 */
	public final myfirstmodule.proxies.Series getHeatMap_Series() throws com.mendix.core.CoreException
	{
		return getHeatMap_Series(getContext());
	}

	/**
	 * @param context
	 * @return value of HeatMap_Series
	 */
	public final myfirstmodule.proxies.Series getHeatMap_Series(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Series result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.HeatMap_Series.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Series.load(context, identifier);
		return result;
	}

	/**
	 * Set value of HeatMap_Series
	 * @param heatmap_series
	 */
	public final void setHeatMap_Series(myfirstmodule.proxies.Series heatmap_series)
	{
		setHeatMap_Series(getContext(), heatmap_series);
	}

	/**
	 * Set value of HeatMap_Series
	 * @param context
	 * @param heatmap_series
	 */
	public final void setHeatMap_Series(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Series heatmap_series)
	{
		if (heatmap_series == null)
			getMendixObject().setValue(context, MemberNames.HeatMap_Series.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.HeatMap_Series.toString(), heatmap_series.getMendixObject().getId());
	}

	/**
	 * @return value of HeatMap_Yaxis
	 */
	public final myfirstmodule.proxies.Yaxis getHeatMap_Yaxis() throws com.mendix.core.CoreException
	{
		return getHeatMap_Yaxis(getContext());
	}

	/**
	 * @param context
	 * @return value of HeatMap_Yaxis
	 */
	public final myfirstmodule.proxies.Yaxis getHeatMap_Yaxis(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Yaxis result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.HeatMap_Yaxis.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Yaxis.load(context, identifier);
		return result;
	}

	/**
	 * Set value of HeatMap_Yaxis
	 * @param heatmap_yaxis
	 */
	public final void setHeatMap_Yaxis(myfirstmodule.proxies.Yaxis heatmap_yaxis)
	{
		setHeatMap_Yaxis(getContext(), heatmap_yaxis);
	}

	/**
	 * Set value of HeatMap_Yaxis
	 * @param context
	 * @param heatmap_yaxis
	 */
	public final void setHeatMap_Yaxis(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Yaxis heatmap_yaxis)
	{
		if (heatmap_yaxis == null)
			getMendixObject().setValue(context, MemberNames.HeatMap_Yaxis.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.HeatMap_Yaxis.toString(), heatmap_yaxis.getMendixObject().getId());
	}

	/**
	 * @return value of HeatMap_Xaxis
	 */
	public final myfirstmodule.proxies.Xaxis getHeatMap_Xaxis() throws com.mendix.core.CoreException
	{
		return getHeatMap_Xaxis(getContext());
	}

	/**
	 * @param context
	 * @return value of HeatMap_Xaxis
	 */
	public final myfirstmodule.proxies.Xaxis getHeatMap_Xaxis(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Xaxis result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.HeatMap_Xaxis.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.Xaxis.load(context, identifier);
		return result;
	}

	/**
	 * Set value of HeatMap_Xaxis
	 * @param heatmap_xaxis
	 */
	public final void setHeatMap_Xaxis(myfirstmodule.proxies.Xaxis heatmap_xaxis)
	{
		setHeatMap_Xaxis(getContext(), heatmap_xaxis);
	}

	/**
	 * Set value of HeatMap_Xaxis
	 * @param context
	 * @param heatmap_xaxis
	 */
	public final void setHeatMap_Xaxis(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Xaxis heatmap_xaxis)
	{
		if (heatmap_xaxis == null)
			getMendixObject().setValue(context, MemberNames.HeatMap_Xaxis.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.HeatMap_Xaxis.toString(), heatmap_xaxis.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return heatMapMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.HeatMap that = (myfirstmodule.proxies.HeatMap) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MyFirstModule.HeatMap";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
