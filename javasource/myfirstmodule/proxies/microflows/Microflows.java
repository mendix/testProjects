// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the MyFirstModule module
	public static boolean aCT_AfterStartup(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("MyFirstModule.ACT_AfterStartup").withParams(params).execute(context);
	}
	public static void aCT_AggregationData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.ACT_AggregationData").withParams(params).execute(context);
	}
	public static myfirstmodule.proxies.Series aCT_CreateHeatMapData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.ACT_CreateHeatMapData").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies.Series.initialize(context, result);
	}
	public static void aCT_CreateNewValue(IContext context, myfirstmodule.proxies.Series _series)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Series", _series == null ? null : _series.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_CreateNewValue").withParams(params).execute(context);
	}
	public static void aCT_CreatePieChartData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.ACT_CreatePieChartData").withParams(params).execute(context);
	}
	public static void aCT_NewChart_Negative(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.ACT_NewChart_Negative").withParams(params).execute(context);
	}
	public static void aCT_NewChart_NoData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.ACT_NewChart_NoData").withParams(params).execute(context);
	}
	public static void aCT_NewChart_Positive(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.ACT_NewChart_Positive").withParams(params).execute(context);
	}
	public static void aCT_NewChartBubble_Positive(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.ACT_NewChartBubble_Positive").withParams(params).execute(context);
	}
	public static void aCT_OnClick(IContext context, myfirstmodule.proxies.Values _values)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Values", _values == null ? null : _values.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClick").withParams(params).execute(context);
	}
	public static void aCT_OnClick_CallMicroflow(IContext context, myfirstmodule.proxies.Values _values)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Values", _values == null ? null : _values.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClick_CallMicroflow").withParams(params).execute(context);
	}
	public static void aCT_OnClick_ClosePage(IContext context, myfirstmodule.proxies.Values _values)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Values", _values == null ? null : _values.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClick_ClosePage").withParams(params).execute(context);
	}
	public static void aCT_OnClick_Error(IContext context, myfirstmodule.proxies.Values _values)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Values", _values == null ? null : _values.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClick_Error").withParams(params).execute(context);
	}
	public static void aCT_OnClick_Error_HeatMap(IContext context, myfirstmodule.proxies.HeatMap _heatMap)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("HeatMap", _heatMap == null ? null : _heatMap.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClick_Error_HeatMap").withParams(params).execute(context);
	}
	public static void aCT_OnClickPie(IContext context, myfirstmodule.proxies.Pie _pie)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Pie", _pie == null ? null : _pie.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClickPie").withParams(params).execute(context);
	}
	public static void aCT_OnClickPie_ClosePage(IContext context, myfirstmodule.proxies.Pie _pie)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Pie", _pie == null ? null : _pie.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClickPie_ClosePage").withParams(params).execute(context);
	}
	public static void aCT_OnClickPie_Error(IContext context, myfirstmodule.proxies.Pie _pie)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Pie", _pie == null ? null : _pie.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClickPie_Error").withParams(params).execute(context);
	}
	public static void aCT_OnClickTimeSeries_Dec(IContext context, testsuite.proxies.PointDecimal _point)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Point", _point == null ? null : _point.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClickTimeSeries_Dec").withParams(params).execute(context);
	}
	public static void aCT_OnClickTimeSeries_Int(IContext context, testsuite.proxies.PointInteger _pointInt)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("PointInt", _pointInt == null ? null : _pointInt.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_OnClickTimeSeries_Int").withParams(params).execute(context);
	}
	public static void aCT_SaveNewValue(IContext context, myfirstmodule.proxies.Values _values)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Values", _values == null ? null : _values.getMendixObject());
		Core.microflowCall("MyFirstModule.ACT_SaveNewValue").withParams(params).execute(context);
	}
	public static myfirstmodule.proxies.Chart dS_Chart(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.DS_Chart").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies.Chart.initialize(context, result);
	}
	public static java.util.List<myfirstmodule.proxies.Pie_NP> dS_CreatePieChartData_NP(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_CreatePieChartData_NP").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Pie_NP> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Pie_NP.initialize(context, obj));
		}
		return result;
	}
	public static void dS_CreateSeries(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		Core.microflowCall("MyFirstModule.DS_CreateSeries").withParams(params).execute(context);
	}
	public static void dS_CreateSeries_Negative(IContext context, java.lang.Long _numberOfSeries, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("NumberOfSeries", _numberOfSeries);
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		Core.microflowCall("MyFirstModule.DS_CreateSeries_Negative").withParams(params).execute(context);
	}
	public static void dS_CreateSeries_Positive(IContext context, java.lang.Long _numberOfSeries, myfirstmodule.proxies.Chart _chart, boolean _isBubble)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("NumberOfSeries", _numberOfSeries);
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		params.put("IsBubble", _isBubble);
		Core.microflowCall("MyFirstModule.DS_CreateSeries_Positive").withParams(params).execute(context);
	}
	public static void dS_CreateSeriesData(IContext context, myfirstmodule.proxies.Series _series, java.lang.Long _numberOfData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Series", _series == null ? null : _series.getMendixObject());
		params.put("NumberOfData", _numberOfData);
		Core.microflowCall("MyFirstModule.DS_CreateSeriesData").withParams(params).execute(context);
	}
	public static void dS_CreateSeriesData_2(IContext context, myfirstmodule.proxies.Series _series, java.lang.Long _numberOfData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Series", _series == null ? null : _series.getMendixObject());
		params.put("NumberOfData", _numberOfData);
		Core.microflowCall("MyFirstModule.DS_CreateSeriesData_2").withParams(params).execute(context);
	}
	public static void dS_CreateSeriesData_Negative(IContext context, myfirstmodule.proxies.Series _series, java.lang.Long _numberOfData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Series", _series == null ? null : _series.getMendixObject());
		params.put("NumberOfData", _numberOfData);
		Core.microflowCall("MyFirstModule.DS_CreateSeriesData_Negative").withParams(params).execute(context);
	}
	public static void dS_CreateSeriesData_Positive(IContext context, myfirstmodule.proxies.Series _series, java.lang.Long _numberOfData, boolean _isBubble)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Series", _series == null ? null : _series.getMendixObject());
		params.put("NumberOfData", _numberOfData);
		params.put("IsBubble", _isBubble);
		Core.microflowCall("MyFirstModule.DS_CreateSeriesData_Positive").withParams(params).execute(context);
	}
	public static java.util.List<myfirstmodule.proxies.Values_NP> dS_CreateSeriesData_Positive_NP(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_CreateSeriesData_Positive_NP").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Values_NP> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Values_NP.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Values_NP> dS_CreateSeriesData_Positive_NP_DynamicSeries(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_CreateSeriesData_Positive_NP_DynamicSeries").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Values_NP> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Values_NP.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Values> dS_GetChartSeries(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_GetChartSeries").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Values> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Values.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Pie> dS_GetPieData(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_GetPieData").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Pie> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Pie.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Series> dS_GetSeries(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_GetSeries").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Series> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Series.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Values> dS_GetSeries1(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_GetSeries1").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Values> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Values.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Values> dS_GetSeries1_delayed(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_GetSeries1_delayed").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Values> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Values.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Values> dS_GetSeries2(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_GetSeries2").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Values> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Values.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Values> dS_GetSeries2_delayed(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_GetSeries2_delayed").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Values> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Values.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Values> dS_GetSeriesCore_3(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_GetSeriesCore_3").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Values> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Values.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.Values> dS_GetSeriesValues(IContext context, myfirstmodule.proxies.Series _series)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Series", _series == null ? null : _series.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_GetSeriesValues").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.Values> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.Values.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.HeatMap> dS_HeatMap(IContext context, myfirstmodule.proxies.Series _series)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Series", _series == null ? null : _series.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_HeatMap").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.HeatMap> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.HeatMap.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<myfirstmodule.proxies.HeatMap> dS_HeatMap_MF(IContext context, myfirstmodule.proxies.Series _series)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Series", _series == null ? null : _series.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DS_HeatMap_MF").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.HeatMap> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.HeatMap.initialize(context, obj));
		}
		return result;
	}
	public static myfirstmodule.proxies.Series dS_HeatMapSeries(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.DS_HeatMapSeries").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies.Series.initialize(context, result);
	}
	public static myfirstmodule.proxies.Chart dS_LineBar_Negative(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.DS_LineBar_Negative").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies.Chart.initialize(context, result);
	}
	public static myfirstmodule.proxies.Chart dS_LineBar_NoData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.DS_LineBar_NoData").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies.Chart.initialize(context, result);
	}
	public static myfirstmodule.proxies.Chart dS_LineBar_Positive(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.DS_LineBar_Positive").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies.Chart.initialize(context, result);
	}
	public static java.util.List<testsuite.proxies.PointInteger> dSL_RandomData(IContext context, testsuite.proxies.Graph _graph)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Graph", _graph == null ? null : _graph.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.DSL_RandomData").withParams(params).execute(context);
		java.util.List<testsuite.proxies.PointInteger> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(testsuite.proxies.PointInteger.initialize(context, obj));
		}
		return result;
	}
	public static testsuite.proxies.Graph dSS_TimeSeries_Refresh(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.DSS_TimeSeries_Refresh").withParams(params).execute(context);
		return result == null ? null : testsuite.proxies.Graph.initialize(context, result);
	}
	public static void generateData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.GenerateData").withParams(params).execute(context);
	}
	public static void iVK_CallMicroflow(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		Core.microflowCall("MyFirstModule.IVK_CallMicroflow").withParams(params).execute(context);
	}
	public static void iVK_CreateDynamicData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.IVK_CreateDynamicData").withParams(params).execute(context);
	}
	public static void iVK_ErrorInMicroflow(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		Core.microflowCall("MyFirstModule.IVK_ErrorInMicroflow").withParams(params).execute(context);
	}
	public static myfirstmodule.proxies.Chart iVK_NoData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("MyFirstModule.IVK_NoData").withParams(params).execute(context);
		return result == null ? null : myfirstmodule.proxies.Chart.initialize(context, result);
	}
	public static void iVK_OnClickClosePage(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		Core.microflowCall("MyFirstModule.IVK_OnClickClosePage").withParams(params).execute(context);
	}
	public static void onClick_HeatMap(IContext context, myfirstmodule.proxies.HeatMap _heatMap)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("HeatMap", _heatMap == null ? null : _heatMap.getMendixObject());
		Core.microflowCall("MyFirstModule.OnClick_HeatMap").withParams(params).execute(context);
	}
}