// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package anychartmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the AnyChartModule module
	public static void aCT_GenerateData(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("AnyChartModule.ACT_GenerateData").withParams(params).execute(context);
	}
	public static void aCT_GetJson_Mulit_Y(IContext context, anychartmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		Core.microflowCall("AnyChartModule.ACT_GetJson_Mulit_Y").withParams(params).execute(context);
	}
	public static void cLK_Event(IContext context, anychartmodule.proxies.EventData _eventData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EventData", _eventData == null ? null : _eventData.getMendixObject());
		Core.microflowCall("AnyChartModule.CLK_Event").withParams(params).execute(context);
	}
	public static java.util.List<myfirstmodule.proxies.ValuesNpe> dSL_RandomNpeData(IContext context, myfirstmodule.proxies.Chart _chart)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Chart", _chart == null ? null : _chart.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("AnyChartModule.DSL_RandomNpeData").withParams(params).execute(context);
		java.util.List<myfirstmodule.proxies.ValuesNpe> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(myfirstmodule.proxies.ValuesNpe.initialize(context, obj));
		}
		return result;
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_3D(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_3D").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Bar(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Bar").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Bar_DataOnly(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Bar_DataOnly").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Box(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Box").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Bubble(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Bubble").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Contour(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Contour").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_ErrorBars(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_ErrorBars").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_GroupBy(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_GroupBy").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_HeatMap(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_HeatMap").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Histogram(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Histogram").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Line(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Line").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Map(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Map").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Muliple_Y(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Muliple_Y").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Muliple_Y_2(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Muliple_Y_2").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Pie(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Pie").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Ribon(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Ribon").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_TimeSeries(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_TimeSeries").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Chart dSS_AnyChart_Waterfall(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.DSS_AnyChart_Waterfall").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Chart.initialize(context, result);
	}
	public static anychartmodule.proxies.Root sUB_GenerateData_Muli_Y(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.SUB_GenerateData_Muli_Y").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Root.initialize(context, result);
	}
	public static anychartmodule.proxies.JsonObject sub_Serie(IContext context, java.lang.Long _factor)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Factor", _factor);
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.Sub_Serie").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.JsonObject.initialize(context, result);
	}
	public static anychartmodule.proxies.Tooltip tT_AnyChart(IContext context, anychartmodule.proxies.EventData _eventData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EventData", _eventData == null ? null : _eventData.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.TT_AnyChart").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Tooltip.initialize(context, result);
	}
	public static anychartmodule.proxies.Tooltip tTI_GetDate(IContext context, anychartmodule.proxies.EventData _eventData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EventData", _eventData == null ? null : _eventData.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("AnyChartModule.TTI_GetDate").withParams(params).execute(context);
		return result == null ? null : anychartmodule.proxies.Tooltip.initialize(context, result);
	}
}